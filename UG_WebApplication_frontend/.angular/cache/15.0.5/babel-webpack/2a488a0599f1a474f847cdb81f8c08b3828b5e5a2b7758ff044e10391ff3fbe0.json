{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nfunction upload(params, param2) {}\nexport class AddAnswersComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n  }\n  AnswerSubmit() {\n    const url = 'http://localhost:8080/addAnswers';\n    const data = {\n      a_id: this.a_id,\n      q_id: this.q_id,\n      answer: this.answer\n    };\n    this.http.post(url, data).subscribe(res => {\n      console.log(res);\n      alert('Answer saved successfully!');\n    }, err => {\n      console.log(err);\n      alert('Error saving Answers');\n    });\n  }\n  getQid() {\n    this.http.get('http://localhost:8080/getAnswers').subscribe(resp => {\n      console.log(resp);\n      this.answer = resp;\n    }, err => {\n      console.log(err);\n    });\n  }\n}\nAddAnswersComponent.ɵfac = function AddAnswersComponent_Factory(t) {\n  return new (t || AddAnswersComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.HttpClient));\n};\nAddAnswersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AddAnswersComponent,\n  selectors: [[\"app-add-answers\"]],\n  decls: 24,\n  vars: 3,\n  consts: [[1, \"formFont\"], [3, \"ngSubmit\"], [\"type\", \"text\", \"name\", \"a_id\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"question_id\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"answer\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [\"type\", \"reset\"]],\n  template: function AddAnswersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AddAnswersComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.AnswerSubmit();\n      });\n      i0.ɵɵelementStart(2, \"label\");\n      i0.ɵɵtext(3, \"Answer ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"input\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function AddAnswersComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.a_id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\")(6, \"br\");\n      i0.ɵɵelementStart(7, \"label\");\n      i0.ɵɵtext(8, \"Question ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function AddAnswersComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.q_id = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\")(11, \"br\");\n      i0.ɵɵelementStart(12, \"label\");\n      i0.ɵɵtext(13, \"Answer:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function AddAnswersComponent_Template_input_ngModelChange_14_listener($event) {\n        return ctx.answer = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"br\")(16, \"br\");\n      i0.ɵɵelementStart(17, \"button\", 5);\n      i0.ɵɵtext(18, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"button\", 6);\n      i0.ɵɵtext(20, \"Clear\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"br\")(22, \"br\")(23, \"br\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.a_id);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.q_id);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.answer);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"h1[_ngcontent-%COMP%]{\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.button[_ngcontent-%COMP%] {\\r\\n  background-color: deepskyblue;\\r\\n  border: 2px black;\\r\\n  color: white;\\r\\n  padding: 10px 20px;\\r\\n  font-size: 16px;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n.formFont[_ngcontent-%COMP%]\\r\\n{\\r\\n  color: #FFFFFF;\\r\\n}\\r\\n\\r\\n\\r\\n.error-message[_ngcontent-%COMP%] {\\r\\n  color: red;\\r\\n  font-size: 0.8em;\\r\\n  margin-top: 0.5em;\\r\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYWRtaW4vYWRtaW4tdGVzdC1jb250cm9sL2FkZC1hbnN3ZXJzL2FkZC1hbnN3ZXJzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtFQUNFLFlBQVk7QUFDZDs7O0FBR0EsY0FBYztBQUNkO0VBQ0UsNkJBQTZCO0VBQzdCLGlCQUFpQjtFQUNqQixZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixrQkFBa0I7QUFDcEI7OztBQUdBOztFQUVFLGNBQWM7QUFDaEI7OztBQUdBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuXHJcbmgxe1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcbi8qdGhlIGJ1dHRvbiAqL1xyXG4uYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBkZWVwc2t5Ymx1ZTtcclxuICBib3JkZXI6IDJweCBibGFjaztcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbn1cclxuXHJcblxyXG4uZm9ybUZvbnRcclxue1xyXG4gIGNvbG9yOiAjRkZGRkZGO1xyXG59XHJcblxyXG5cclxuLmVycm9yLW1lc3NhZ2Uge1xyXG4gIGNvbG9yOiByZWQ7XHJcbiAgZm9udC1zaXplOiAwLjhlbTtcclxuICBtYXJnaW4tdG9wOiAwLjVlbTtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":";;;;AAOA,SAASA,MAAM,CAACC,MAAiF,EAAEC,MAAqC,GAExI;AAMA,OAAM,MAAOC,mBAAmB;EAkD9BC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,WAAM,GAAND,MAAM;IAAkB,SAAI,GAAJC,IAAI;EAAe;EA1C/DC,YAAY;IACV,MAAMC,GAAG,GAAG,kCAAkC;IAC9C,MAAMC,IAAI,GAAG;MACXC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,IAAI,EAAE,IAAI,CAACA,IAAI;MACfC,MAAM,EAAC,IAAI,CAACA;KAEb;IAKD,IAAI,CAACN,IAAI,CAACO,IAAI,CAACL,GAAG,EAAEC,IAAI,CAAC,CAACK,SAAS,CACjCC,GAAG,IAAG;MACJC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChBG,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,EACDC,GAAG,IAAG;MACJH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;MAChBD,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACN;EAIAE,MAAM;IACJ,IAAI,CAACd,IAAI,CAACe,GAAG,CAAC,kCAAkC,CAAC,CAACP,SAAS,CACxDQ,IAAI,IAAI;MACPN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC;MACjB,IAAI,CAACV,MAAM,GAAGU,IAAI;IACpB,CAAC,EAEAH,GAAG,IAAI;MACNH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;IAClB,CAAC,CACF;EACH;;AA5CWhB,mBAAmB;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB;QAAnBA,mBAAmB;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCfhCC,8BAAsB;MACdA;QAAA,OAAYC,kBAAc;MAAA,EAAC;MAC/BD,6BAAO;MAAAA,0BAAU;MAAAA,iBAAQ;MAEzBA,gCAA2D;MAAxCA;QAAA;MAAA,EAAkB;MAArCA,iBAA2D;MAC3DA,qBAAI;MAEJA,6BAAO;MAAAA,4BAAY;MAAAA,iBAAQ;MAC3BA,gCAAkE;MAA/CA;QAAA;MAAA,EAAkB;MAArCA,iBAAkE;MAClEA,sBAAI;MACJA,8BAAO;MAAAA,wBAAO;MAAAA,iBAAQ;MACtBA,iCAA+D;MAA5CA;QAAA;MAAA,EAAoB;MAAvCA,iBAA+D;MAC/DA,sBAAI;MACJA,kCAAuB;MAAAA,uBAAM;MAAAA,iBAAS;MACtCA,kCAAqB;MAAAA,sBAAK;MAAAA,iBAAS;MAEnCA,sBAAI;MACNA,iBAAO;;;MAbcA,eAAkB;MAAlBA,kCAAkB;MAIlBA,eAAkB;MAAlBA,kCAAkB;MAGlBA,eAAoB;MAApBA,oCAAoB","names":["upload","params","param2","AddAnswersComponent","constructor","router","http","AnswerSubmit","url","data","a_id","q_id","answer","post","subscribe","res","console","log","alert","err","getQid","get","resp","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\Buddima Dissanayake\\OneDrive\\Documents\\GitHub\\UG-Webapplication\\UG_WebApplication_frontend\\src\\app\\admin\\admin-test-control\\add-answers\\add-answers.component.ts","C:\\Users\\Buddima Dissanayake\\OneDrive\\Documents\\GitHub\\UG-Webapplication\\UG_WebApplication_frontend\\src\\app\\admin\\admin-test-control\\add-answers\\add-answers.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n\r\n\r\n\r\nfunction upload(params: { ContentType: any; Bucket: string; ACL: string; Body: any; Key: string }, param2: (err: any, data: any) => void) {\r\n\r\n}\r\n@Component({\r\n  selector: 'app-add-answers',\r\n  templateUrl: './add-answers.component.html',\r\n  styleUrls: ['./add-answers.component.css']\r\n})\r\nexport class AddAnswersComponent {\r\n\r\n  a_id  : any;\r\n  q_id: any;\r\n  answer : any;\r\n\r\n\r\n\r\n  AnswerSubmit() {\r\n    const url = 'http://localhost:8080/addAnswers';\r\n    const data = {\r\n      a_id: this.a_id,\r\n      q_id: this.q_id,\r\n      answer:this.answer,\r\n\r\n    };\r\n\r\n\r\n\r\n\r\n    this.http.post(url, data).subscribe(\r\n      res => {\r\n        console.log(res);\r\n        alert('Answer saved successfully!');\r\n      },\r\n      err => {\r\n        console.log(err);\r\n        alert('Error saving Answers');\r\n      });\r\n  }\r\n\r\n\r\n\r\n  getQid() {\r\n    this.http.get('http://localhost:8080/getAnswers').subscribe(\r\n      (resp) => {\r\n        console.log(resp);\r\n        this.answer = resp;\r\n      },\r\n\r\n      (err) => {\r\n        console.log(err);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  constructor(private router: Router, private http: HttpClient) {}\r\n\r\n}\r\n","<div class=\"formFont\">\r\n  <form (ngSubmit)=\"AnswerSubmit()\">\r\n    <label>Answer ID:</label>\r\n\r\n    <input type=\"text\" [(ngModel)]=\"a_id\" name=\"a_id\" required>\r\n    <br><br>\r\n\r\n    <label>Question ID:</label>\r\n    <input type=\"text\" [(ngModel)]=\"q_id\" name=\"question_id\" required>\r\n    <br><br>\r\n    <label>Answer:</label>\r\n    <input type=\"text\" [(ngModel)]=\"answer\" name=\"answer\" required>\r\n    <br><br>\r\n    <button type=\"submit\" >Submit</button>\r\n    <button type=\"reset\">Clear</button>\r\n\r\n    <br><br> <br>\r\n  </form>\r\n</div>\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}